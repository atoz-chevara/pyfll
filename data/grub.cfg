export loaded
export disable_gfxterm
export bootarch
export from
export fromiso
export bootlang
export keyboard
export timezone
export hwclock
export def_bootlang
export def_keyboard
export def_timezone
export menu_color_normal
export menu_color_highlight
export pager

function menu_reload {
  configfile ${prefix}/grub.cfg
}

function is_efi {
  if [ "${grub_platform}" = "efi" ]; then
    if [ "${grub_cpu}" = "i386" ]; then
        bootarch="i386-efi"
    fi
    return 0
  fi
  return 1
}

function efi_detect {
  if is_efi ; then
    submenu --class=find.efi --hotkey=f "Detect EFI bootloaders" {
      efi_found=false

      for efi in (*,gpt*)/efi/*/*.efi (*,gpt*)/efi/*/*/*.efi (*,gpt*)/*.efi (*,gpt*)/*/*.efi ; do
        regexp --set=1:efi_device '^\((.*)\)/' "${efi}"
        if [ -e "${efi}" ]; then
          efi_found=true

          menuentry --class=efi "${efi}" "${efi_device}" {root="${2}"
chainloader "${1}"
          }
        fi
      done

      if [ "${efi_found}" != true ]; then
        menuentry --hotkey=q --class=find.none "No EFI files detected." {menu_reload}
      else
        menuentry --hotkey=q --class=cancel "Cancel" {menu_reload}
      fi
    }
  fi
}

function memtest_detect {
  if ! is_efi; then
    if [ -f /boot/memtest ]; then
      menuentry --class=memtest --hotkey=m "Memory Test (memtest86+)" {linux16 /boot/memtest}
    fi
  fi
}

function lang_setup {
  source ${prefix}/locales/${1}
  menu_reload
}

function lang_menu {
  menuentry --class=lang.${ll} "lang=${ll}" "${ll}" {lang_setup "${2}"}
}

function locale_menu {
  if [ "${hwclock}" = "utc" ]; then
    class="utc"
    title="utc"
    clockset=""
  elif [ "${timezone}${bootlang}" = "" ]; then
    class="unset"
    title="utc"
    clockset=""
  else
    title="${def_timezone}"
    class="tz.${def_timezone}"
    clockset="utc"
  fi
  min2d="$MINUTE"
  if regexp '(^.$)' "$min2d"; then
    min2d="0${mid2d}"
  fi
  hour2d="$HOUR"
  if regexp '(^.$)' "$hour2d"; then
    hour2d="0${hour2d}"
  fi
  menuentry --class=tz.$class --hotkey=u "$hour2d:$min2d $title" "$clockset" {hwclock="$2"
menu_reload
  }
  submenu --class=tz --hotkey=t "tz=${def_timezone}" {
    default=0
    menuentry --class=cancel --hotkey=q "Cancel (${def_timezone})" {menu_reload}
    for tt in Africa America Asia Atlantic Australia Etc Europe Pacific; do
      submenu --class=tz.${tt} "${tt}" {
        source "${prefix}/tz/${1}"
      }
    done
  }
  submenu --class=kbd --hotkey=k "keyboard=${def_keyboard}" {
    default=0
    menuentry --class=cancel --hotkey=q "Cancel (${def_keyboard})" {menu_reload}
    source ${prefix}/locales/keyboards
  }
  submenu --hotkey=l --class=lang "lang=${def_bootlang}" {
    default=0
    menuentry --class=lang.${def_bootlang} "lang=${def_bootlang}" {menu_reload}
    menuentry --class=lang.cs "Čeština" {lang_setup "cs_CZ"}
    menuentry --class=lang.da "Dansk" {lang_setup "da_DK"}
    submenu --class=lang.de "Deutsch" {
      for ll in de_DE de_AT de_BE de_CH de_LI de_LU; do
        lang_menu ${ll}
      done
    }
    submenu --class=lang.el "Ελληνικά" {
      for ll in el_GR el_CY; do
        lang_menu ${ll}
      done
    }
    submenu --class=lang.en "English" {
      for ll in en_US en_AG en_AU en_BW en_CA en_DK en_GB en_HK en_IE en_IN en_NG en_NZ en_PH en_SG en_ZA en_ZW; do
        lang_menu ${ll}
      done
    }
    submenu --class=lang.es "Español" {
      for ll in es_ES es_AR es_BO es_CL es_CO es_CR es_DO es_EC es_GT es_HN es_MX es_NI es_PA es_PE es_PR es_PY es_SV es_US es_UY es_VE; do
        lang_menu ${ll}
      done
    }
    submenu --class=lang.fr "Français" {
      for ll in fr_FR fr_BE fr_CA fr_CH fr_LU fr_NC; do
        lang_menu ${ll}
      done
    }
    submenu --class=lang.it "Italiano" {
      for ll in it_IT it_CH; do
        lang_menu ${ll}
      done
    }
    menuentry --class=lang.ja "日本語" {lang_setup "ja_JP"}
    submenu --class=lang.nl "Nederlands" {
      for ll in nl_NL nl_AW nl_BE; do
        lang_menu ${ll}
      done
    }
    menuentry --class=lang.pl "Polski" {lang_setup "pl_PL"}
    submenu --class=lang.pt "Português" {
      for ll in pt_BR pt_PT; do
        lang_menu ${ll}
      done
    }
    menuentry --class=lang.ro "Română" {lang_setup "ro_RO"}
    submenu --class=lang.ru "Русский" {
      for ll in ru_RU ru_UA;do
        lang_menu ${ll}
      done
    }
  }
  default=4
}

function locale_defaults {
  if [ -z "${def_bootlang}" ]; then
    def_bootlang="en_US"
    def_keyboard="us"
    def_timezone="UTC"
  fi
}

pager=1

insmod regexp
insmod datehook
if ! is_efi ; then
  insmod part_gpt
fi

if [ -z "${loaded}" ]; then
    iscd=""
    regexp -s iscd '^(cd)' "${root}"
    if [ "${root}" != "hd96" -a "${iscd}" != "cd" ]; then
    	from="fromhd"
	export from
    fi
    source ${prefix}/variable.cfg
    loaded=true
fi

if keystatus --shift; then
  disable_gfxterm=true
fi

if [ "${disable_gfxterm}" != "true" ]; then
  insmod all_video
  if loadfont ${prefix}/unicode.pf2 ; then
    gfxmode=640x480
    insmod gfxterm
    if ! is_efi; then
      insmod vbe
    fi
    if terminal_output --append gfxterm; then
      terminal_output --remove console
    else
      disable_gfxterm=true
    fi
  else
    disable_gfxterm=true
  fi
fi

menu_color_normal=cyan/blue
menu_color_highlight=white/blue

if [ -n "${iso_path}" ]; then 
  fromiso="fromiso=${iso_path}"
fi

for kopt in "${clinput}" "${from}" "${fromiso}" "${bootlang}" "${keyboard}" "${timezone}" "${hwclock}" "${bootarch}"; do
  if [ -n "${kopt}" ]; then
    kopts="${kopts} ${kopt}"
  fi
done

locale_defaults

locale_menu
source ${prefix}/kernels.cfg
if [ -n "$clinput" ]; then
 menuentry --class=edit "$clinput" {if [ -n "$1" ]; then
 clinput="$1"
else
 unset clinput
fi
menu_reload
 }
fi
menuentry --class=type --hotkey=tab "" {echo "Enter new kernel command line arguments:"
read newclinput
if [ -n "$newclinput" ]; then
 if [ -n "$clinput" ]; then
  clinput="$clinput $newclinput"
 else
  clinput="$newclinput"
 fi
 export clinput
fi
menu_reload
}
efi_detect
memtest_detect
